<?xml version="1.0" encoding="utf-8"?>

<configuration>

	<appSettings>
		<add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
	</appSettings>
	<system.web>
		<compilation debug="true" />
	</system.web>
	<!-- 서비스 라이브러리 프로젝트를 배포할 때 호스트의 app.config 파일에 구성 파일의 내용을 추가해야 합니다.
  System.Configuration이 라이브러리에 대한 구성 파일을 지원하지 않습니다. -->
	<system.serviceModel>
		<diagnostics performanceCounters="Default" />
		<bindings>
			<!-- Security Mode를 Transport Mode로 변경하고 clientCredentialType를 Windows로 설정-->
			<wsHttpBinding>
				<binding name="websocketHttpBinding">
					<security mode="Transport">
						<transport clientCredentialType="Windows" />
						<message clientCredentialType="Certificate" />
					</security>
				</binding>
			</wsHttpBinding>
		</bindings>
		<services>
			<service behaviorConfiguration="UserCertificate" name="GettingStartedLib.CalculatorService">
				<endpoint address="" binding="wsHttpBinding" bindingConfiguration="websocketHttpBinding"
				          contract="GettingStartedLib.ICalculator">
					<identity>
						<dns value="localhost" />
					</identity>
				</endpoint>
				<!--끝점 구성은 일반적으로 WCF 서비스에서 HTTPS를 통한 메타데이터 게시를 활성화하여
				클라이언트가 적절한 프록시를 생성하고 서비스의 데이터 계약 및 작업을 안전하게 이해할 수 있도록 하는 데 사용됩니다-->
				<endpoint address="mex" binding="mexHttpsBinding" contract="IMetadataExchange" />
				<host>
					<baseAddresses>
						<add baseAddress="https://localhost:7070/GettingStarted/CalculatorService" />
					</baseAddresses>
				</host>
			</service>
		</services>
		<behaviors>
			<serviceBehaviors>
				<behavior name="UserCertificate">
					<!--https를 쓰므로 httpsGetEnabled을 true해야 함 -->
					<!--HTTPS GET을 사용하여 메타데이터에 액세스할 수 있는 정확한 URL을 지정 -->
					<serviceMetadata httpsGetEnabled="true"
					                 httpsGetUrl="https://localhost:7070/GettingStarted/CalculatorService/mex" />
					<serviceDebug includeExceptionDetailInFaults="true" />
					<serviceCredentials>
						<clientCertificate>
							<authentication certificateValidationMode="ChainTrust" revocationMode="NoCheck" />
						</clientCertificate>
						<!--인증서를 등록 ThumbPrint를 등록하고 FindByThumbprint에 작성 -->
						<serviceCertificate findValue="18B36B0F1956F01F8AE440D1B98AA73FC1742724"
						                    storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint" />
					</serviceCredentials>
				</behavior>
			</serviceBehaviors>
		</behaviors>
	</system.serviceModel>
</configuration>